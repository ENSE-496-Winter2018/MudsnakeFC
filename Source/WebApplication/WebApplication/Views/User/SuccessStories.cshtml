@model IEnumerable<WebApplication.Models.Idea>
@{
    ViewBag.Title = "SuccessStories";
}

<h2>SuccessStories</h2>

<script type="text/javascript">
    $(document).ready(function () {
        $('[id="datatable1"]').DataTable();
    });
</script>

@if (Model != null)
{
    <table class="table table-striped" id="datatable1">
        <thead>
            <tr>
                <th>
                    Idea#
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>              
                <th>
                    Status
                </th>                   
                <th></th>
                <th>
                    Comments
                </th>
                <th>
                    Likes
                </th>
                <th>Submitted by</th>
                <th>Team</th>
                <th></th>
            </tr>
        </thead>
        
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <button title="View Idea details" type="button" onclick="location.href='@Url.Action("ViewIdea", new { Id = item.Id })'" class="btn btn-success">IDEA #@item.Id <br /><span style="font-size: 25px" class="glyphicon glyphicon-circle-arrow-right"></span></button>
                    </td>
                    <td>
                        <strong>@Html.DisplayFor(modelItem => item.Title)</strong>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>                
                    <td>
                        <button title="View Comments" type="button" onclick="location.href='@Url.Action("ViewIdea", new { id = item.Id })'" class="btn btn-warning">
                            <span class="glyphicon glyphicon-comment"></span> @item.Comments.Count
                        </button>
                    </td>
                    <td>
                        <style>
                            .like, .unlike {
                                border: 1px solid black;
                                color: black;
                                cursor: pointer;
                            }

                            .like {
                                background-color: white;
                                border-color: #2196F3;
                                color: dodgerblue;
                            }

                                .like:hover {
                                    background: #2196F3;
                                    color: white;
                                }

                            .unlike {
                                background-color: #2196F3;
                                border-color: #2196F3;
                                color: white;
                            }
                        </style>
                        @{int userId = Convert.ToInt32(Session["UserID"]);}
                        @if (item.Likes.Where(x => x.User_id == userId).Any())
                        {
                            <button title="Unlike Idea" type="button" onclick="location.href='@Url.Action("UnlikeIdea", new { idea_id = item.Id })'" class="btn-sm unlike" style=""><span class="glyphicon glyphicon-thumbs-up"></span></button>
                        }
                        else
                        {
                            <button title="Like Idea" type="button" onclick="location.href='@Url.Action("LikeIdea", new { idea_id = item.Id })'" class="btn-sm like" style=""><span class="glyphicon glyphicon-thumbs-up"></span></button>
                        }
                        <strong> @item.Likes.Count</strong>
                    </td>

                    @if (item.Subscriptions.Where(x => x.User_id == Convert.ToInt32(Session["UserID"])).Any())
                    {
                        <td>
                            <button title="Unsubscribe from Idea" type="button" onclick="location.href='@Url.Action("Unsubscribe", new { idea_id = item.Id })'" class="btn btn-danger">Unsubscribe</button>
                        </td>
                    }
                    else
                    {
                        <td>
                            <button title="Subscribe to Idea" type="button" onclick="location.href='@Url.Action("Subscribe", new { idea_id = item.Id })'" class="btn btn-danger">Subscribe</button>
                        </td>
                    }
                    <td><img src="\Images\avatar-icon-png-2.png" style="vertical-align: middle; width: 70px; height: 70px; border-radius: 50%;" class="avatar" alt="Avatar"> @Html.DisplayFor(modelItem => item.User.Username)</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Team_id)
                    </td>


                    @if (Session["UserType"].ToString() == "superapprover")
                    {
                        if (item.OnSuccessStories==null || item.OnSuccessStories == false)
                        {
                        <td>
                            <button title="Add Success Stories" type="button" onclick="location.href='@Url.Action("AddSuccessStories", new { idea_id = item.Id })'" class="btn btn-danger">Add to Success Stories</button>
                        </td>
                         }
                         else
                         {
                         <td>
                            <button title = "Remove Success Stories" type = "button" onclick = "location.href='@Url.Action("RemoveSuccessStories", new { idea_id = item.Id })'" class="btn btn-danger">Remove from Success Stories</button>
                          </td>
                        }
                     }
                </tr>
                            }
        </tbody>
    </table>
                            }

